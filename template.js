module.exports = '\n<!-- - vars = package.json-->\n<element name="polymer-ui-icon" extends="polymer-ui-theme-aware" attributes="src size index icon"><style type="text/css">/*\nCopyright 2013 The Polymer Authors. All rights reserved.\nUse of this source code is governed by a BSD-style\nlicense that can be found in the LICENSE file.\n*/\n@host {\n  * {\n    display: inline-block;\n    vertical-align: middle;\n    width: 24px;\n    height: 24px;\n  }\n}\n\n#icon {\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n  background-repeat: no-repeat;\n}\n\n#icon.polymer-ui-dark-icon, #icon.polymer-ui-light-theme {\n  background-position: -24px 0;\n}\n\n#icon.polymer-ui-light-icon, #icon.polymer-ui-dark-theme {\n  background-position: -72px 0;\n}\n\n.polymer-ui-icons {\n  background: url(../assets/action-icons.png) 0 0 no-repeat;\n}\n</style>\n  <template>\n    <div id="icon"></div>\n  </template>\n  <script>\n    Polymer.register(this, {\n          /**\n          * The URL of an image for the icon.\n          *\n          * @attribute src\n          * @type string\n          * @default \'\'\n          */\n          src: \'\',\n          /**\n          * Specifies the size of the icon.\n          *\n          * @attribute size\n          * @type string\n          * @default 24\n          */\n          size: 24,\n          icon: \'\',\n          bx: 0,\n          by: 0,\n          iconChanged: function() {\n            this.index = this.icon in icons ? icons[this.icon] : -1;\n          },\n          indexChanged: function() {\n            this.$.icon.classList.add(\'polymer-ui-icons\');\n            this.by = -this.size * this.index;\n            this.updateIcon();\n          },\n          srcChanged: function() {\n            this.$.icon.classList.remove(\'polymer-ui-icons\');\n            this.$.icon.setAttribute(\'style\', \'background:url(\' + this.src + \') center;\');\n          },\n          themeChanged: function(old) {\n            this.$.icon.style.backgroundPosition = \'\';\n            this.$.icon.classList.switch(old, this.theme);\n            this.asyncMethod(\'updateIcon\');\n          },\n          updateIcon: function() {\n            this.bx = parseFloat(getComputedStyle(this.$.icon).backgroundPosition.split(\' \').shift());\n            this.$.icon.style.backgroundPosition = (this.bx + \'px\') + \' \' + (this.by + \'px\');\n          }\n    });\n        var icons = {\n          drawer: 0,\n          menu: 1,\n          search: 2,\n          dropdown: 3,\n          close: 4,\n          add: 5,\n          trash: 6,\n          refresh: 7,\n          settings: 8,\n          dialog: 9\n        };\n  </script>\n</element>';